* This is a tool for building a docker layer

Start from alpine is it is very small. Add some labels at the
beginning, and update and install base packages needed to compile
python.

#+BEGIN_SRC docker-build :tangle Dockerfile.template
FROM alpine:3.19.1

LABEL docker-version = "@DOCKER_VERSION@"
LABEL python-python = "@PYTHON_VERSION@"
LABEL timestamp = "@TIMESTAMP@"

RUN apk update && apk --no-cache add git gcc autoconf automake libtool openssl-dev bash build-base sqlite-dev pkgconf linux-headers ca-certificates bzip2-dev
#+END_SRC

Create the home tree, and tmpdir, and set home. Then export common
environment variables.

#+BEGIN_SRC docker-build :tangle Dockerfile.template
RUN test -d /home/tmp || mkdir -p /home/tmp
WORKDIR /home/

ENV PYENV_ROOT="/home/.pyenv/"
ENV TMPDIR=/home/tmp
ENV SHELL=/bin/bash
ENV HOME=/home/
ENV PATH="$PYENV_ROOT/bin:$PYENV_ROOT/shims/:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin::"
#+END_SRC

Create the installation of the "python" virtualenv. It comes with SSL
and sqlite.

#+BEGIN_SRC docker-build :tangle Dockerfile.template
COPY py.sh python.sh install-module-tools.sh .
RUN bash ./py.sh tools-unix
RUN bash ./py.sh global-virtual python
#+END_SRC

Install the module tools by upgrading pip and installing pipenv

#+BEGIN_SRC docker-build :tangle Dockerfile.template
RUN bash install-module-tools.sh
#+END_SRC

Clean up after the build

#+BEGIN_SRC docker-build :tangle Dockerfile.template
RUN rm *.sh rm -r /home/tmp/*
#+END_SRC
